video_type (smとかnmとか)はニコニコのhttp://www.nicovideo.jp/watch/sm***へのアクセスが400系でないならキャッシュできる
また、動画へのアクセス http://smile-cln68.nicovideo.jp/smile?m=***.***へのアクセスのRefererヘッダをみるとわかる#と思ったけどそれはchromeだけだった


watchページにいろいろ仕込むとなると、イベント駆動にならざるを得ない
と思うじゃん？
ダウンロード済の動画に大して:
	削除、永久保存、等のコマンドを送る時は楽

ダウンロード中の動画について、削除、永久保存、等のコマンドを送る時、さらにダウンロード中の動画への要求が来た時:
	動画のキャッシュファイルの最終更新日時が1秒以内なら、一秒まって、また確かめて、一秒以内でないならコマンド実行
lcok free!



#その他
現状ではPython2.7で開発中(そこら辺のLinuxサーバですぐに動かせるという要件を自分に課したため)
オミトロンみたいな拡張正規表現によるフィルタは実装する気はない(誰かがやるなら別)
GPLv3で公開予定(もしかしたら気が変わるかも)
ただし、汎用性のあるモジュールはWTFPL(パブリックドメイン相当)にする

logger の基底をどうするか
    =>python標準logging システムはとっても高性能
      suffix(loggerの名前)から自動的に親子関係を設定し管理する




本家nlでsocketwrapperの使われ方と、サーバとのコネクションが切れるタイミング

class _SocketFileImpl:

    def get_rbuf_data(self):
        pass


class ResponseBodyTransferPack:

    def __init__(self):
        self.res
        self.response_body_transfer_func
        # def response_body_transfer_func(client_sockfile)
        self.server_sockfile

拡張子を不要にできるように改良
サブディレクトリに移動できるように改良

handle系関数の整理


videoinfoproxy

nicocacheAPI

ブラックリスト

proxymonkey

subdirにキャッシュがあった
タイトルが変わってた
renameする
どうなる？
=>top dirにコピーしてrenameする

FSにない新しいキャッシュを作りたい
renameする
どうなる？
=>



*testcode(core)*依存する手製モジュールをcore,libとutilityに分ける
	proxtheta.coreの中身同士は依存しない
	coreだけに依存するものは極力proxtheta.commonに切り出す
	proxthetaにあるモジュール群はcoreとcommonに依存
	特にutilityはいろんなモジュールに依存
set_body廃止
httpmes.is_error_response

*testcode(lib)*コールバックをリストではなく3つの関数にする/リクエストフィルタとレスポンスフィルタも追加する
	handle_one_requestの引数を変更
	handle_clientの引数を(one_request_handler, client_file, info, always_close_connection=False)に変更して直接handle_one_requestを呼ばないようにする

*testcode(utility)
	汎用性のある、フィルタリングを実行するutil関数

iowrapper のSocketWrapperもSocketWrapperImplを用意する(_SocketWrapperImplPy27)

*nicocachemonkey
	htmlがgzip圧縮されてる時は解凍して、Content-Encoding: gzipを消す
	deflateとかよくわかんないのが来たらwarn出して解凍せずに転送
	</ *body>を
		<!-- added by nicocachemoncey -->
		<script うんぬん></script>
		<!-- end nicocachemoncey -->
		</body>
	
*nlのフィルタをDOMに書き換え
	まずは15_thumbInfoFilter(基本).txtでやってみる
	
video_typeキャッシュ
*?ecoリザーブ

CONNECT メソッドのときstartlineのparseがうまく行かないバグを修正

------------リリース----------------
すべてのパターンの列挙
 client keep, proxy close



		

*行末がCRLFじゃなくても大丈夫？
*多段串対応
*httpsサーバ/クライアント
*plコマンド
発表
*pydoc
*日本語ドキュメント
!!!の除去
http/1.0が来た場合の処理 ->例外投げる ->どこが？
rfc2324

#winネイティブでマルチプロセス対応#挫折
*polのwin32ネイティブ対応

python2 => 3
unicode -> str
str     -> bytes

#######################3
https傍受
	ニセのルート証明書をパソコンにインストール
	ニセのルート証明書を串からブラウザに送りつける
	串が外部のサーバの証明書をチェック
めんどくせえ
	connectメソッドがきたらリダイレクトすればいいや
		そんなザルなことは出来ない気がするなぁ
http串経由でようつべに全部Accessできればいいんだけど、
あとから読み込むファイルがsrc=https://...ってなってると無理

対策
	ニセ証明書
		安全じゃない
	http <=>串<=>httpsサーバにして、リソースをすべて串経由するようにhtml書き換え
		domでjsonpとかロードされたらどうしようもない
	コンテンツを丸々複製してプロクシ経由させるようにする
		flashも自前で用意しなきゃいけないし、そうでなくても手間

	XHRを呼ぶjsやflashなら
		src=...swfなら大元のhtmlを串経由で読めばいい、相対パスのリソースもすべて串経由になり、そこから呼ばれるXHRも串にreqが行く
			https://...html => http://localhost:8080/https://...html
		src=https://...swfの場合
			htmlを串で書き換えて転送
	動的jsonp読み込みやクロスドメインflushでは無理

諦めよう！

非同期対応

適当なライブラリ取ってきて関数とソケット登録してloopをrunすればいいでしょ
